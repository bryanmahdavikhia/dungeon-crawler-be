image: gradle:7.4-jdk11-alpine

before_script:
  - echo "Semoga tugas adpronya cepet kelarnya dengan hasil memuaskan aamiin"
  - echo pwd
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # Remove caches
  - rm -f  .gradle/caches/modules-2/modules-2.lock
  - rm -fr .gradle/caches/*/plugin-resolution/

variables:
  JACOCO_CSV_LOCATION: '$CI_PROJECT_DIR/build/jacocoCsv'
  GRADLE_OPTS: '-Dorg.gradle.daemon=false'

stages:
  - build
  - test
  - deploy
  - sonarqube-check

build:
  stage: build
  script:
    - gradle assemble
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 1 day

test:
  stage: test
  script:
    - export SPRING_PROFILES_ACTIVE=test
    - gradle check --stacktrace
    - cat build/reports/jacoco/test/html/index.html | grep -o '<tfoot>.*</tfoot>'
    - ./gradlew check
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' $JACOCO_CSV_LOCATION
  artifacts:
    paths:
      - build/reports/jacoco/*
    expire_in: 1 day

production-deploy:
  stage: deploy
  only:
    - master
  image: ruby:latest
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_APP_NAME migrate

beta-deploy:
  stage: deploy
  only:
    - staging
  image: ruby:latest
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_BETA_APP_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_BETA_APP_NAME migrate

sonarqube-check:
  stage: sonarqube-check
  only:
    - staging
    - merge_requests
    - master
  image: gradle:7.4-jdk11-alpine
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: gradle build jacocoTestReport sonarqube -Dsonar.qualitygate.wait=true
  allow_failure: true